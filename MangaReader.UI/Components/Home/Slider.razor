@inherits MyComponentBase
@inject NavigationManager NavigationManager
@inject IDialogService DialogService
@inject AppService appService
@inject ISnackbar Snackbar

@* <RouteAnimation> *@

    @if (_mydatatrend == null)
    {
        <MudSkeleton Class="mt-1" Height="40px" />
        <MudSkeleton Class="mt-1" Height="40px" />
        <MudSkeleton Class="mt-1" Height="40px" />
        <MudSkeleton Class="mt-1" Height="40px" />
    }
    else
    {
        @if (!_mydatatrend.Any())
        {
            <Empty OnRefresh="GetTrendsListAsync" />
        }
        else
        {
           @*  <MudList Clickable="true">
                @foreach (var myFavorite in _mydatatrend)
                {
                    <MudListItem>
                        <div class="d-flex align-center my-popular" @onclick="@(()=>GotoDetail(myFavorite.DocumentData.IdDoc))">
                            <div class="flex-grow-0 tool">
                                <MudIconButton Icon="@Icons.Material.Filled.MenuBook"
                                               Size="Size.Medium"
                                               OnClick="@(()=>GotoDetail(myFavorite.DocumentData.IdDoc))"></MudIconButton>

                            </div>
                            <div class="d-flex align-center flex-grow-1 info">
                                <MudImage Src="@myFavorite.DocumentData.Image"
                                          Width="40"
                                          Height="40"
                                          Elevation="5"
                                          Class="rounded-lg mr-3" />
                                <div>
                                    <div>@myFavorite.DocumentData.Name</div>
                                    <div class="music-count">
                                        Genres:@myFavorite.DocumentData.Genres
                                    </div>
                                    <div class="music-count">Status: @myFavorite.DocumentData.Status</div>
                                </div>
                            </div>
                        </div>
                    </MudListItem>
                    <MudHidden Breakpoint="Breakpoint.MdAndUp">
                        <MudDivider />
                    </MudHidden>
                }
            </MudList> *@
        <MudCarousel Class="mud-width-full" Style="height:200px;" TData="object" AutoCycle="false">


            <MudCarouselItem Color="@Color.Primary" Transition="Transition.Slide">
                <div class="d-flex" style="height:100%">
                    <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large" />
                </div>
            </MudCarouselItem>
            <MudCarouselItem Color="@Color.Secondary" Transition="Transition.Fade">
                <div class="d-flex" style="height:100%">
                    <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large" />
                </div>
            </MudCarouselItem>
            <MudCarouselItem Color="@Color.Tertiary" Transition="Transition.Custom" CustomTransitionEnter="bounceIn" CustomTransitionExit="bounceOut">
                <div class="d-flex" style="height:100%">
                    <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large" />
                </div>
            </MudCarouselItem>
            <MudCarouselItem Transition="Transition.Custom" CustomTransitionEnter="backInDown" CustomTransitionExit="backOutDown">
                <div class="d-flex" style="background-color:lightgray; height:100%">
                    <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Color="@Color.Primary" Size="@Size.Large" />
                </div>
            </MudCarouselItem>
            <MudCarouselItem Transition="Transition.Custom" CustomTransitionEnter="rotateIn" CustomTransitionExit="rotateOut">
                <div class="d-flex" style="background-color:lightgray; height:100%">
                    <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Color="@Color.Secondary" Size="@Size.Large" />
                </div>
            </MudCarouselItem>
        </MudCarousel>
        }
    }
@* </RouteAnimation> *@
@code {
    private List<ResponseTrend>? _mydatatrend;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (IsNotLogin)
        {
            NavigationManager.NavigateTo("/login");
            return;
        }
        await GetTrendsListAsync();
    }

    private async Task GetTrendsListAsync()
    {
        _mydatatrend = null;
        _mydatatrend = await appService.GetDataSlide();

        Console.WriteLine(_mydatatrend);
    }


    private void GotoPopup()
    {
        NavigationManager.NavigateTo($"/trend");
    }
    private void GotoDetail(string idDoc)
    {
        NavigationManager.NavigateTo($"/detail/{idDoc}");
    }
}
